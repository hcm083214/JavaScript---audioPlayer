{"version":3,"file":"main.js","mappings":"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","sources":["webpack://audio/./src/util/reactive.js","webpack://audio/./src/util/util.js","webpack://audio/./src/service/ajax.js","webpack://audio/./src/player/player.js","webpack://audio/./src/home/control.js","webpack://audio/./src/home/carousel.js","webpack://audio/./src/recommendList/recommendList.js","webpack://audio/./src/index.js","webpack://audio/./src/home/home.js"],"sourcesContent":["export function reactive(obj, effective) {\r\n    return new Proxy(obj, {\r\n        get(obj, key) {\r\n            return Reflect.get(obj, key)\r\n        },\r\n        set(obj, key, value) {\r\n            let set = Reflect.set(obj, key, value)\r\n            effective();\r\n            return set;\r\n        }\r\n    })\r\n}","export function debounce(fn, times, isImmediately = true) {\r\n    //防抖函数\r\n    let timer = null;\r\n    let cb;\r\n    if (isImmediately) {\r\n        cb = function (...args) {\r\n            timer && clearTimeout(timer);\r\n            let isDone = !timer;\r\n            timer = setTimeout(() => {\r\n                timer = null\r\n            }, times);\r\n            isDone && fn.apply(this, args)\r\n        }\r\n    } else {\r\n        cb = function (...args) {\r\n            const content = this;\r\n            timer && clearTimeout(timer)\r\n            timer = setTimeout(() => {\r\n                fn.apply(content, args);\r\n            }, times);\r\n        }\r\n    }\r\n    return cb\r\n}\r\n/**\r\n * @description: 路由参数提取\r\n * @param {*} hash\r\n * @return {*}\r\n */\r\n export function getRouterOptions(hash) {\r\n\tconst options = {//路由配置选项\r\n\t\tname: '',\r\n\t\tparams: '',\r\n\t\tquery: '',\r\n\t};\r\n\tif (!hash || hash == '#/home') {\r\n\t\toptions.name = 'home';\r\n\t} else {\r\n\t\t// 提取name params query信息\r\n\t\t//         0   1   2      \r\n\t\t//<a href='#/name/:params?query1=value1?query2=value2'></a>\r\n\t\ttry {\r\n\t\t\tconst routerArr = hash.slice(1).split('/');\r\n\t\t\toptions.name = routerArr[1];\r\n\t\t\tconst paramsArr = routerArr[2].split('?');\r\n\t\t\toptions.params = paramsArr[0].slice(1);\r\n\t\t\toptions.query = paramsArr.slice(1);\r\n\t\t} catch (error) {\r\n\t\t\toptions.name = '404'\r\n\t\t}\r\n\r\n\t}\r\n\treturn options;\r\n}\r\n\r\n/**\r\n * @description: 日期格式化函数 xxxx-xx-xx\r\n * @param {*} time\r\n * @return {*}\r\n */\r\n export function formatCreateTime(time) {\r\n\tlet now = new Date(time)\r\n\tlet year = now.getFullYear();\r\n\tlet month = now.getMonth();\r\n\tlet day = now.getDay();\r\n\treturn `${year}-${month}-${day}`\r\n}\r\n\r\n/**\r\n * @description: 歌曲时间格式化函数 00:00\r\n * @param {*} time\r\n * @return {*}\r\n */\r\nexport function formatSongTime(time) {\r\n\tlet second = Math.floor(time / 1000 % 60);\r\n\tsecond = second < 10 ? (`0${second}`) : second;\r\n\tlet minute = Math.floor(time / 1000 / 60);\r\n\tminute = minute < 10 ? (`0${minute}`) : minute;\r\n\treturn `${minute}:${second}`;\r\n\r\n}\r\n/**\r\n * @description: 歌曲列表去除重复\r\n * @param {*} songList 需要添加的列表\r\n * @return {*}\r\n */\r\n export function songListFilter(songList) {\r\n\tlet songListArr = JSON.parse(window.localStorage.getItem('songList')) || [];\r\n\tlet addToList = songList.map(item => ({\r\n\t\tid: item.id,\r\n\t\tname: item.name,\r\n\t\tar: item.ar,\r\n\t\tdt:item.dt,\r\n\t}));\r\n\t//去重\r\n\tsongListArr = [...addToList, ...songListArr];\r\n\tconst tempMap = new Map();\r\n\tsongListArr.forEach(item => {\r\n\t\t!tempMap.has(item.id) && tempMap.set(item.id, item)\r\n\t});\r\n\t// 限制数量\r\n\tconst limitArr = [...tempMap.values()];\r\n\t(limitArr.length > 100) && (limitArr = limitArr.slice(limitArr.length - 100))\r\n\treturn limitArr;\r\n}\r\n\r\n/**\r\n * @description: 高斯模糊函数\r\n * @param {*} imgData\r\n * @return {*}\r\n */\r\n function gaussBlur(imgData) {\r\n\tvar pixes = imgData.data;\r\n\tvar width = imgData.width;\r\n\tvar height = imgData.height;\r\n\tvar gaussMatrix = [],\r\n\t\tgaussSum = 0,\r\n\t\tx, y,\r\n\t\tr, g, b, a,\r\n\t\ti, j, k, len;\r\n\r\n\tvar radius = 10;\r\n\tvar sigma = 5;//标准差σ，σ描述正态分布资料数据分布的离散程度，σ越大，数据分布越分散，σ越小，数据分布越集中\r\n\r\n\ta = 1 / (Math.sqrt(2 * Math.PI) * sigma);\r\n\tb = -1 / (2 * sigma * sigma);\r\n\t//生成高斯矩阵\r\n\tfor (i = 0, x = -radius; x <= radius; x++, i++) {\r\n\t\tg = a * Math.exp(b * x * x);//标准正态分布函数，正态分布记作N(μ,σ2)，其中μ = 0 ，σ2 = 5\r\n\t\tgaussMatrix[i] = g;\r\n\t\tgaussSum += g;\r\n\r\n\t}\r\n\t//归一化, 保证高斯矩阵的值在[0,1]之间\r\n\tfor (i = 0, len = gaussMatrix.length; i < len; i++) {\r\n\t\tgaussMatrix[i] /= gaussSum;\r\n\t}\r\n\t//x 方向一维高斯运算\r\n\tfor (y = 0; y < height; y++) {\r\n\t\tfor (x = 0; x < width; x++) {\r\n\t\t\tr = g = b = a = 0;\r\n\t\t\tgaussSum = 0;\r\n\t\t\tfor (j = -radius; j <= radius; j++) {\r\n\t\t\t\tk = x + j;\r\n\t\t\t\tif (k >= 0 && k < width) {//确保 k 没超出 x 的范围\r\n\t\t\t\t\t//r,g,b,a 四个一组\r\n\t\t\t\t\ti = (y * width + k) * 4;\r\n\t\t\t\t\tr += pixes[i] * gaussMatrix[j + radius];\r\n\t\t\t\t\tg += pixes[i + 1] * gaussMatrix[j + radius];\r\n\t\t\t\t\tb += pixes[i + 2] * gaussMatrix[j + radius];\r\n\t\t\t\t\t// a += pixes[i + 3] * gaussMatrix[j];\r\n\t\t\t\t\tgaussSum += gaussMatrix[j + radius];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti = (y * width + x) * 4;\r\n\t\t\t// 除以 gaussSum 是为了消除处于边缘的像素, 高斯运算不足的问题\r\n\t\t\t// console.log(gaussSum)\r\n\t\t\tpixes[i] = r / gaussSum;\r\n\t\t\tpixes[i + 1] = g / gaussSum;\r\n\t\t\tpixes[i + 2] = b / gaussSum;\r\n\t\t\t// pixes[i + 3] = a ;\r\n\t\t}\r\n\t}\r\n\t//y 方向一维高斯运算\r\n\tfor (x = 0; x < width; x++) {\r\n\t\tfor (y = 0; y < height; y++) {\r\n\t\t\tr = g = b = a = 0;\r\n\t\t\tgaussSum = 0;\r\n\t\t\tfor (j = -radius; j <= radius; j++) {\r\n\t\t\t\tk = y + j;\r\n\t\t\t\tif (k >= 0 && k < height) {//确保 k 没超出 y 的范围\r\n\t\t\t\t\ti = (k * width + x) * 4;\r\n\t\t\t\t\tr += pixes[i] * gaussMatrix[j + radius];\r\n\t\t\t\t\tg += pixes[i + 1] * gaussMatrix[j + radius];\r\n\t\t\t\t\tb += pixes[i + 2] * gaussMatrix[j + radius];\r\n\t\t\t\t\t// a += pixes[i + 3] * gaussMatrix[j];\r\n\t\t\t\t\tgaussSum += gaussMatrix[j + radius];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti = (y * width + x) * 4;\r\n\t\t\tpixes[i] = r / gaussSum;\r\n\t\t\tpixes[i + 1] = g / gaussSum;\r\n\t\t\tpixes[i + 2] = b / gaussSum;\r\n\t\t}\r\n\t}\r\n\t//end\r\n\treturn imgData;\r\n}\r\n\r\n// const imgBox = document.querySelector('.player-background-image');\r\n// console.log(\"🚀 ~ file: util.js ~ line 199 ~ imgBox\", imgBox)\r\n// const src = \" https://tse1-mm.cn.bing.net/th?id=OIP.M2dHJdmuNPhuODWuMLIK_gHaEo&w=170&h=106&c=8&rs=1&qlt=90&dpr=1.25&pid=3.1&rm=2 \";\r\nexport function blur(ele, src) {\r\n\t// const canvas = document.querySelector('#canvas');\r\n\t//设置 canvas 画布\r\n\tconst canvas = document.createElement('canvas');\r\n\tcanvas.width = 100;\r\n\tcanvas.height = 100;\r\n\t// 获得 canvas 上下文\r\n\tconst ctx = canvas.getContext('2d');\r\n\t//Image()函数将会创建一个新的HTMLImageElement实例。它的功能等价于 document.createElement('img')\r\n\tconst img = new Image();\r\n\timg.src = src;\r\n\t// 添加属性crossorigin，增加img元素的跨域支持，设置值为anonymous，表示对此元素的 CORS 请求将不设置凭据标志\r\n\timg.setAttribute('crossorigin', 'anonymous');\r\n\t//当img元素加载完成时执行\r\n\timg.onload = function () {\r\n\t\tconst { width, height } = canvas;\r\n\t\t// ctx.drawImage(img,0,0,img.width,img.height,5,5,width,height);\r\n\r\n\t\tctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\r\n\t\tlet imgData = ctx.getImageData(0, 0, width, height);\r\n\t\tlet gaussData = gaussBlur(imgData);\r\n\t\tctx.putImageData(gaussData, 0, 0);\r\n\t\t//将图片转变为base64的编码格式\r\n\t\tlet imgSrc = canvas.toDataURL();\r\n\t\t//设置背景图片\r\n\t\tele.style.backgroundImage = 'url(' + imgSrc + ')';\r\n\t}\r\n}\r\n// blur(imgBox,src)\r\n\r\n/**\r\n * @description: 格式化歌词格式\r\n * @param {*} lyricStr\r\n * @return {*}\r\n */\r\n export function formatSongLyric(lyricStr) {\r\n\tif (typeof lyricStr != 'string') return '歌词加载失败';\r\n\tconst tempArr = lyricStr.split('\\n');\r\n\tconst lyric = tempArr.map((v, i) => {\r\n\t\tlet reg = /^\\[(\\w*:\\w*.?\\w*)\\](.*)/g;\r\n\t\tlet lyricObj = {}\r\n\t\tif (reg.test(v)) {\r\n\t\t\tlet timeStr = RegExp.$1;\r\n\t\t\tlet second = timeStr.split(':').reduce((accumulator, curValue) => (60 * Number(accumulator)) + Number(curValue)).toFixed(2)\r\n\t\t\tlyricObj.time = Number(second);\r\n\t\t\tlyricObj.lyric = RegExp.$2;\r\n\t\t}\r\n\t\treturn lyricObj;\r\n\t})\r\n    console.log(\"🚀 ~ file: util.js ~ line 252 ~ formatSongLyric ~ lyric\", lyric)\r\n\r\n\treturn lyric;\r\n}\r\n","// ajax.js\r\nconst BASE_URL = 'http://localhost:3000';\r\nconst processEnv = process.env || 'development';\r\nimport { dataBlocks, songInfo, lyric, playlist } from \"./api.js\";\r\n\r\nexport default function Ajax({ //请求参数配置\r\n    method = \"GET\",  //默认为'get'请求\r\n    url,\r\n    data = {}\r\n}) {\r\n    return new Promise(resolve => { // 返回异步请求\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(method, BASE_URL + url)\r\n        xhr.onload = function () {\r\n            resolve(JSON.parse(xhr.response))\r\n        }\r\n        xhr.onerror = function () {\r\n            console.log(xhr)\r\n            if (xhr.status == 0) {\r\n\r\n            }\r\n        }\r\n        xhr.send(JSON.stringify(data));\r\n    })\r\n}\r\n\r\n/**\r\n * @description: 获得轮播图信息\r\n * @param {*}\r\n * @return {*}\r\n */\r\nexport async function getBannerList() {\r\n    let result;\r\n    if (processEnv === 'demo') {\r\n        result = dataBlocks;\r\n    } else {\r\n        result = Ajax({\r\n            url: `/homepage/block/page`\r\n        })\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @description: 获得推荐歌单列表\r\n * @param {*} musicId\r\n * @return {*}\r\n */\r\nexport async function getRecommendList(musicId) {\r\n    let result;\r\n    if (processEnv === 'demo') {\r\n        result = playlist;\r\n    } else {\r\n        result = Ajax({\r\n            url: `/playlist/detail?id=${musicId}`\r\n        })\r\n    }\r\n    // const result = Ajax({\r\n    //     url: `/playlist/detail?id=${musicId}`\r\n    // })\r\n    return result;\r\n}\r\n\r\n/**\r\n * @description: 获得音乐的播放地址\r\n * @param {*} musicId\r\n * @return {*}\r\n */\r\nexport async function getAudioSrc(musicId) {\r\n    let result = `https://music.163.com/song/media/outer/url?id=${musicId}`;\r\n    // try {\r\n    //     result = Ajax({\r\n    //         url: `/music/url?id=${musicId}`\r\n    //     })\r\n    // } catch (error) {\r\n    //     result = `https://music.163.com/song/media/outer/url?id=${musicId}`\r\n    // }\r\n    return result;\r\n}\r\n\r\n/**\r\n * @description: 获得歌曲信息\r\n * @param {*} musicId\r\n * @return {*}\r\n */\r\nexport async function getAudioInfo(musicId) {\r\n    let result;\r\n    if (processEnv === 'demo') {\r\n        result = songInfo;\r\n    } else {\r\n        result = Ajax({\r\n            url: `/song/detail?ids=${musicId}`\r\n        })\r\n    }\r\n    // const result = Ajax({\r\n    //     url: `/song/detail?ids=${musicId}`\r\n    // });\r\n    return result;\r\n}\r\n\r\n/**\r\n * @description: 获得歌曲歌词\r\n * @param {*} musicId\r\n * @return {*}\r\n */\r\nexport async function getAudioLyric(musicId) {\r\n    let result;\r\n    if (processEnv === 'demo') {\r\n        result = lyric;\r\n    } else {\r\n        result = Ajax({\r\n            url: `/lyric?id=${musicId}`\r\n        })\r\n    }\r\n    // const result = Ajax({\r\n    //     url: `/lyric?id=${musicId}`\r\n    // })\r\n    return result;\r\n}\r\n","import { PlayerCoverBackMode } from \"../home/control.js\";\r\nimport { getAudioInfo, getAudioLyric } from \"../service/ajax.js\";\r\n\r\nimport { reactive } from \"../util/reactive.js\";\r\nimport { blur, formatSongLyric } from \"../util/util.js\";\r\n\r\n// export async function playerPage({ params: id = '' }) {\r\n//     document.querySelector('#app').innerHTML = 'playerPage加载中';\r\n//     // 更改歌曲是否返回推荐列表详情页还是去播放列表\r\n//     const lastRecommendId = window.localStorage.getItem('lastRecommendId');\r\n//     PlayerCoverBackMode('recommend', lastRecommendId);\r\n// }\r\nconst music = {\r\n    data: [],\r\n    lyric: [],\r\n}\r\n\r\nconst musicDataProxy = reactive({\r\n    musicId: 1813926556,\r\n}, initPlayer)\r\n\r\nexport async function playerPage({ params: id = '' }) {\r\n    document.querySelector('#app').innerHTML = 'playerPage加载中';\r\n    changePlayerMusicId(id)\r\n    // 更改歌曲是否返回推荐列表详情页还是去播放列表\r\n    const lastRecommendId = window.localStorage.getItem('lastRecommendId');\r\n    PlayerCoverBackMode('recommend', lastRecommendId);\r\n}\r\nexport async function changePlayerMusicId(musicId) {\r\n    const id = musicId;\r\n\r\n    const musicData = await getAudioInfo(id);\r\n    const musicLyric = await getAudioLyric(id);\r\n    music.data = musicData;\r\n\r\n    //初始化播放器歌词\r\n    music.lyric = formatSongLyric(musicLyric.lrc.lyric);\r\n\r\n    musicDataProxy.musicId = id;\r\n}\r\n\r\n/**\r\n * @description: 初始化播放器播放页面\r\n * @param {*}\r\n * @return {*}\r\n */\r\nasync function initPlayer() {\r\n    console.log(\"🚀 ~ file: player.js ~ line 50 ~ initPlayer ~ musicData.data\", music.data)\r\n\r\n    let songInfo = music.data.songs[0];\r\n    document.querySelector('#app').innerHTML = `\r\n    <div class=\"player-background-image\">\r\n        <div class=\"player-content d-flex\">\r\n            <div class=\"player-album-cover d-flex\">\r\n                <!-- 歌曲封面 -->\r\n                <div class=\"ablum\">\r\n                    <div class=\"cover running\">\r\n                        <img src=\"${songInfo.al.picUrl}\" alt=\"\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"player-lyric d-flex align-items-start\">\r\n                <!-- 歌曲和歌词信息 -->\r\n                <h3 class=\"song-name\">\r\n                ${songInfo.name}\r\n                </h3>\r\n                <div class=\"song-info\">\r\n                    <span class=\"song-album\">专辑：${songInfo.al.name}</span>\r\n                    <span class=\"singer\">歌手：${songInfo.ar[0].name}</span>\r\n                    <span class=\"song-sour\">来源：${songInfo.al.name}</span>\r\n                </div>\r\n                <div class=\"lyric-wrap\">\r\n                ${initLyric(music.lyric)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    `;\r\n    initPlayerEvent();\r\n    imgBlur();\r\n}\r\n\r\n/**\r\n * @description: 添加高斯模糊后的背景图\r\n * @param {*}\r\n * @return {*}\r\n */\r\nfunction imgBlur() {\r\n    const imgBox = document.querySelector('.player-background-image');\r\n    let imgSrc = music.data.songs[0].al.picUrl;\r\n    blur(imgBox, imgSrc)\r\n}\r\n\r\n/**\r\n * @description: 动态添加歌词\r\n * @param {*} lyricData\r\n * @return {*}\r\n */\r\nfunction initLyric(lyricData) {\r\n    if (lyricData.length == 0) return '';\r\n    let tempStr = '';\r\n    lyricData.forEach(item => {\r\n        tempStr += `\r\n        <p class=\"song-lyric-item\" data-time='${item.time}'>${Object.keys(item).length > 0 ? item.lyric : ''}</p>\r\n        `\r\n    });\r\n    return tempStr;\r\n}\r\n\r\nfunction initPlayerEvent() {\r\n    const audio = document.querySelector('#myAudio');\r\n    audio.addEventListener('timeupdate', (e) => {\r\n        // 获得音乐播放当前的时间\r\n        const lyricItem = document.querySelectorAll('.song-lyric-item');\r\n        if (!lyricItem.length) return;\r\n\r\n        const currentTime = e.target.currentTime;\r\n        let i = 0;\r\n        Array.from(lyricItem).forEach(item => {\r\n            const time = item.getAttribute('data-time');\r\n            if (currentTime > time) i++;\r\n            item.classList.remove('active');\r\n        });\r\n        lyricItem[i - 1].classList.add('active');\r\n        if (i > 5) {\r\n            setScrollTop('lyric-wrap', 'song-lyric-item', i - 1 - 5);\r\n        }\r\n    })\r\n    audio.addEventListener('ended', () => {\r\n        const ablumCover = document.querySelector('.ablum .cover');\r\n        if (!ablumCover) return;\r\n        ablumCover.style.animationPlayState = 'paused';\r\n    })\r\n    audio.addEventListener('pause', () => {\r\n        const ablumCover = document.querySelector('.ablum .cover');\r\n        if (!ablumCover) return;\r\n        ablumCover.style.animationPlayState = 'paused';\r\n    })\r\n    audio.addEventListener('playing', () => {\r\n        const ablumCover = document.querySelector('.ablum .cover');\r\n        if (!ablumCover) return;\r\n        ablumCover.style.animationPlayState = 'running';\r\n    })\r\n}\r\n/**\r\n * @description: 滚动条自动滑动的距离\r\n * @param {*} className\r\n * @param {*} target\r\n * @param {*} index\r\n * @return {*}\r\n */\r\nfunction setScrollTop(className, target, index) {\r\n    const ele = document.querySelector(`.${className}`);\r\n    if (typeof target == \"number\") {\r\n        ele.scrollTop = index * target;\r\n    } else if (typeof target == 'string') {\r\n        const { height } = document.querySelector(`.${target}`).getBoundingClientRect();\r\n        ele.scrollTop = index * height;\r\n    } else if (target instanceof HTMLElement) {\r\n        const { height } = target.getBoundingClientRect();\r\n        ele.scrollTop = index * height;\r\n    }\r\n}","import { getAudioSrc, getAudioInfo } from \"../service/ajax.js\";\r\nimport { formatSongTime } from \"../util/util.js\";\r\nimport { reactive } from \"../util/reactive.js\";\r\nimport { changePlayerMusicId } from \"../player/player.js\";\r\n\r\n\r\nconst isPlayProxy = reactive({//用来控制播放、暂停\r\n    isPlay: false,\r\n}, playPauseKeyRender)\r\n\r\nconst musicIdProxy = reactive({\r\n    musicId: 1813926556,\r\n}, initPlayerControl);\r\n\r\nconst musicModeProxy = reactive({\r\n    musicMode: 0,\r\n}, musicModeRender)\r\n\r\n/**\r\n * @description: 初始化音乐播放器控制栏\r\n * @param {*} id :音乐的id\r\n * @return {*}\r\n */\r\nexport async function initPlayerControl(reloadAudio = true) {\r\n    let musicId = Number(window.localStorage.getItem('musicId') || 1813926556);\r\n    console.log(\"🚀 ~ file: control.js ~ line 27 ~ initPlayerControl ~ musicId\", musicId)\r\n    //修改播放器底部控制栏对应的href值，以便跳转页面的时候能拿到歌曲id\r\n    PlayerCoverBackMode('player', musicId)\r\n    //加载歌曲\r\n    const musicSrc = await getAudioSrc(musicId);\r\n    const musicData = await getAudioInfo(musicId);\r\n    if (reloadAudio) {\r\n        const myAudio = document.querySelector('#myAudio');\r\n        myAudio.src = musicSrc;\r\n        isPlayProxy.isPlay = true;\r\n    }\r\n\r\n    let songInfo;\r\n    musicData && (songInfo = musicData.songs[0]);\r\n    playerControlRender(songInfo);\r\n    // 初始化播放列表\r\n    playerListRender();\r\n}\r\n\r\nfunction playPauseKeyRender() {\r\n    const myAudio = document.querySelector('#myAudio');\r\n    const playerControl = document.querySelector('.player-control-unit #player-control');\r\n    //控制音乐的播放和暂停\r\n    isPlayProxy.isPlay ? myAudio.play() : myAudio.pause();\r\n    //控制播放和暂停的图标\r\n    isPlayProxy.isPlay ? playerControl.innerHTML = `<use xlink:href=\"#icon-bofangzhong\"></use>`\r\n        : playerControl.innerHTML = `<use xlink:href=\"#icon-zanting\"></use>`;\r\n}\r\n\r\nexport function initPlayerEvent() {\r\n    // 控制播放及暂停\r\n    const playerControl = document.querySelector('.player-control-unit #player-control');\r\n    playerControl.addEventListener('click', () => {\r\n        isPlayProxy.isPlay = !isPlayProxy.isPlay;\r\n    })\r\n\r\n    // 播放进度更新\r\n    const myAudio = document.querySelector('#myAudio');\r\n    const percent = setProcess('#volume-bar', 'percentMode', 0.5);\r\n    myAudio.volume = percent;\r\n    myAudio.addEventListener('timeupdate', (e) => {\r\n\r\n        const currentTime = e.target.currentTime;\r\n        const totalTime = e.target.duration;\r\n        setProcess('#progress-bar', 'percentMode', currentTime / totalTime);\r\n        document.querySelector('.song-progress .current-time').innerText = formatSongTime(currentTime * 1000);\r\n\r\n        // const currentTime = e.target.currentTime;\r\n        // const totalTime = e.target.duration;\r\n        // const percent = currentTime / totalTime;\r\n        // const { width } = document.querySelector('#progress-bar').getBoundingClientRect()\r\n        // document.querySelector('.song-progress .current-time').innerText = formatSongTime(currentTime * 1000);\r\n        // document.querySelector('#progress-bar .progress-bar').style.width = `${(percent * 100).toFixed(2)}%`;\r\n        // document.querySelector('#progress-bar .progress-dot').style.left = `${Math.round(percent * width) - 2}px`\r\n    });\r\n    myAudio.addEventListener('ended', () => {\r\n        isPlayProxy.isPlay = false;\r\n        musicIdProxy.musicId = changeMusicId('next');\r\n        changePlayerMusicId(musicIdProxy.musicId);\r\n    })\r\n    // 进度条控制\r\n    document.querySelector('#progress-bar').addEventListener('click', (e) => {\r\n        const percent = setProcess('#progress-bar', 'positionMode', e.clientX);\r\n        const totalTime = myAudio.duration;\r\n        myAudio.currentTime = percent * totalTime;\r\n        isPlayProxy.isPlay = true;\r\n    });\r\n    document.querySelector('#volume-bar').addEventListener('click', (e) => {\r\n        const percent = setProcess('#volume-bar', 'positionMode', e.clientX);\r\n        myAudio.volume = percent;\r\n        isPlayProxy.isPlay = true;\r\n    });\r\n\r\n    //播放模式控制\r\n    document.querySelector('#musicMode').addEventListener('click', (e) => {\r\n        let musicMode = window.localStorage.getItem('musicMode') || 0;\r\n        musicMode = ++musicMode % 3;\r\n        musicModeProxy.musicMode = musicMode\r\n        // if (musicMode == 0) {\r\n        //     e.target.innerHTML = `<use xlink:href=\"#icon-liebiaoxunhuan\"></use>`;\r\n        // } else if (musicMode == 1) {\r\n        //     e.target.innerHTML = `<use xlink:href=\"#icon-suijibofang\"></use>`;\r\n        // } else if (musicMode == 2) {\r\n        //     e.target.innerHTML = `<use xlink:href=\"#icon-danquxunhuan\"></use>`;\r\n        // }\r\n        window.localStorage.setItem('musicMode', musicMode);\r\n    })\r\n    //上一首\r\n    document.querySelector('#player-prev').addEventListener('click', () => {\r\n        musicIdProxy.musicId = changeMusicId('prev');\r\n        changePlayerMusicId(musicIdProxy.musicId);\r\n    })\r\n    //下一首\r\n    document.querySelector('#player-next').addEventListener('click', () => {\r\n        musicIdProxy.musicId = changeMusicId('next');\r\n        changePlayerMusicId(musicIdProxy.musicId);\r\n    })\r\n    let isPlayerListShow = false;\r\n    document.querySelector('#playerList').addEventListener('click', () => {\r\n        const listsEle = document.querySelector('.player-list');\r\n        isPlayerListShow = !isPlayerListShow;\r\n        listsEle.classList.remove('display-none')\r\n        isPlayerListShow && listsEle.classList.add('display-none')\r\n    })\r\n    // 设置播放列表点击修改当前播放音乐\r\n    document.querySelector('.player-list-ul').addEventListener('click', (e) => {\r\n        if (e.target.parentNode.tagName != 'LI') return;\r\n        const musicId = e.target.parentNode.getAttribute('data-id');\r\n        console.log(\"🚀 ~ file: control.js ~ line 1 ~ document.querySelector ~ e.target.getAttribute('data-id')\", musicId)\r\n\r\n        window.localStorage.setItem('musicId', musicId);\r\n        musicIdProxy.musicId = musicId;\r\n        changePlayerMusicId(musicIdProxy.musicId);\r\n    }, true)\r\n}\r\n\r\nfunction musicModeRender() {\r\n    const mode = window.localStorage.getItem('musicMode') || 0;\r\n    const musicModeStr = mode == 0 ? '<use xlink:href=\"#icon-liebiaoxunhuan\"></use>' :\r\n        mode == 1 ? '<use xlink:href=\"#icon-suijibofang\"></use>' : '<use xlink:href=\"#icon-danquxunhuan\"></use>'\r\n    document.querySelector('#musicMode').innerHTML = musicModeStr;\r\n}\r\n\r\nfunction playerControlRender(songInfo) {\r\n    //修改播放器控制栏的视图\r\n    document.querySelector('.songname').innerText = songInfo.name;\r\n    document.querySelector('.singer').innerText = songInfo.ar[0].name;\r\n    document.querySelector('.total-time').innerText = formatSongTime(songInfo.dt);\r\n    Array.from(document.querySelectorAll('.player-control-songinfo .img')).forEach(item => {\r\n        item.innerHTML = `<img src=${songInfo.al.picUrl} alt='' >`;\r\n    })\r\n    document.querySelector('.player-control-unit #player-control').innerHTML = `\r\n    <use xlink:href=\"#icon-bofangzhong\"></use>\r\n    `;\r\n    musicModeRender();\r\n}\r\n/**\r\n * @description: 通过改变 musicId 达到播放模式控制的目的\r\n * @param {*} control：播放模式 mode ==0 --> 顺序播放；mode ==1 --> 随机播放；mode ==2 --> 单曲循环；\r\n * @return {*}\r\n */\r\nfunction changeMusicId(control = 'next') {\r\n    let musicId = window.localStorage.getItem('musicId') || 1813926556;\r\n    const mode = window.localStorage.getItem('musicMode') || 0;\r\n    if (mode == 2) return musicId;\r\n\r\n    const songList = JSON.parse(window.localStorage.getItem('songList')) || [];\r\n    const songs = songList.length;\r\n    let index = songList.findIndex(item => item.id == musicId);\r\n    console.log(\"🚀 ~ file: control.js ~ line 119 ~ index ~ index\", index)\r\n    if (mode == 1) {\r\n        index = Math.floor(Math.random() * songs);\r\n    } else if (mode == 0 && control == 'next') {\r\n        index = ++index % songs;\r\n    } else if (mode == 0 && control == 'prev') {\r\n        index = --index % songs;\r\n    }\r\n    musicId = songs > 0 ? songList[index].id : musicId;\r\n    window.localStorage.setItem('musicId', musicId)\r\n    return musicId;\r\n}\r\n\r\n/**\r\n * @description: 设置进度条的进度\r\n * @param {*} eleName\r\n * @param {*} mode\r\n * @param {*} eleWidth\r\n * @return {*}\r\n */\r\nfunction setProcess(eleName, mode, eleWidth) {\r\n    const progressBar = document.querySelector(eleName);\r\n    const { left, width } = progressBar.getBoundingClientRect();\r\n\r\n    let percent;\r\n    if (mode == 'percentMode') {\r\n        percent = eleWidth;\r\n    } else if (mode == 'positionMode') {\r\n        let distance = eleWidth - left;\r\n        percent = distance / width;\r\n    }\r\n\r\n    document.querySelector(`${eleName} .progress-bar`).style.width = `${(percent * 100).toFixed(2)}%`;\r\n    document.querySelector(`${eleName} .progress-dot`).style.left = `${Math.round(percent * width) - 2}px`;\r\n    return percent;\r\n}\r\n\r\n/**\r\n * @description: 点击底部播放栏封面图片，控制页面需要跳转的页面\r\n * @param {*} page 需要跳转到页面\r\n * @param {*} id  如果当前页是 recommend，那么 id 为 推荐歌单ID；如果当前页是 player ，那么 id 为 musicId\r\n * @return {*}\r\n */\r\nexport function PlayerCoverBackMode(page, id) {\r\n    if (page == 'player') {\r\n        document.querySelector('#playerCover').setAttribute('href', `#/player/:${id}`);\r\n        document.querySelector('#playerCoverBack').classList.add('display-none');\r\n        document.querySelector('#playerCover').classList.remove('display-none');\r\n    } else if (page == 'recommend') {\r\n        document.querySelector('#playerCoverBack').setAttribute('href', `#/recommendList/:${id}`);\r\n        document.querySelector('#playerCover').classList.add('display-none');\r\n        document.querySelector('#playerCoverBack').classList.remove('display-none');\r\n    }\r\n}\r\n\r\n/**\r\n * @description: 初始化播放列表\r\n * @param {*}\r\n * @return {*}\r\n */\r\nexport function playerListRender() {\r\n    const playerListUl = document.querySelector('.player-list-ul');\r\n    const playerListArr = JSON.parse(window.localStorage.getItem('songList')) || [];\r\n    const musicId = window.localStorage.getItem('musicId')\r\n    if (!playerListArr.length) {\r\n        playerListUl.innerHTML = `\r\n        <li class=\"player-list-li d-flex justify-content-start\">\r\n            请添加你喜欢的音乐\r\n        </li>\r\n        `;\r\n    } else {\r\n        const tempStr = playerListArr.map(item =>\r\n            `<li class=\"player-list-li d-flex justify-content-start pointer \" data-id='${item.id}'>\r\n            <svg class='icon ${musicId == item.id ? '' : \"opacity\"}' aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-bofangzhong\"></use>\r\n            </svg>\r\n            <div class=\"song-name single-text-omitted\">${item.name}</div>\r\n            <div class=\"singer\">${item.ar[0].name}</div>\r\n            <div class=\"song-time\">${formatSongTime(item.dt)}</div>\r\n        </li>`\r\n        ).join('');\r\n        playerListUl.innerHTML = tempStr;\r\n    }\r\n}\r\n","import { debounce } from '../util/util.js';\r\n\r\n// 切换箭头为静态 HTML 样式，无需根据图片数量动态生成。\r\nconst carouselControl = `\r\n<button class=\"carousel-control carousel-control-left carousel-control-hover\">\r\n<svg class=\"icon\" aria-hidden=\"true\">\r\n    <use xlink:href=\"#icon-arrow-left\"></use>\r\n</svg>\r\n</button>\r\n<button class=\"carousel-control carousel-control-right carousel-control-hover\">\r\n<svg class=\"icon\" aria-hidden=\"true\">\r\n    <use xlink:href=\"#icon-arrow-right\"></use>\r\n</svg>\r\n</button>\r\n`;\r\n//轮播图配置\r\nconst carousel = {\r\n    data: [],//轮播图数据\r\n    currentIndex: 0,//轮播图当前切换的画面\r\n    times: 2000,//轮播图多少时间切换画面\r\n    animationTimes: 0.5,//轮播图动画持续时间，单位s\r\n    autoCycleTimer: new Set(),//如果在切换动画，无法进行切换画面\r\n}\r\n\r\nexport function carouselRender(data) {\r\n    //初始化轮播图\r\n    let carouselItem = '', carouselIndicatorsLi = '';\r\n    const wrapper = document.querySelector('.carousel-wrapper');\r\n    let { width = 0 } = wrapper.getBoundingClientRect();//得到图片的宽度\r\n    //动态生成轮播图\r\n    data.forEach((item, index) => {\r\n        //指示器激活选中判断\r\n        let isActive = (carousel.currentIndex == index) ? 'active' : '';\r\n        //动态生成轮播图图片，并给每一张图片加上偏移量和动画效果\r\n        carouselItem += `\r\n            <div class=\"carousel-item ${'#' + index}\" style='transform:translateX(${width * (index - 1)}px);transition-duration:${carousel.animationTimes}s'>\r\n                <img src=\"${item.pic}\" alt=\"\">\r\n            </div>\r\n            `;\r\n        //动态生成轮播图指示器\r\n        carouselIndicatorsLi += `\r\n                <li data-slide-to=\"${index}\" class=\"carousel-indicators-li ${(isActive)}\"></li>\r\n            `\r\n    });\r\n    // 通过模板字符串，按照 home.html 中的 html 结构进行排布\r\n    const carouselContainer = `\r\n        <div class=\"carousel-container\" style=\"transition:transform ${carousel.animationTimes}s \">\r\n            ${carouselControl} \r\n            <div class=\"carousel-content\">   \r\n                ${carouselItem}\r\n            </div>\r\n        </div>\r\n        `;\r\n    const carouselIndicators = `\r\n        <ul class=\"carousel-indicators d-flex\">\r\n            ${carouselIndicatorsLi}\r\n        </ul>\r\n        `;\r\n    // 将得到的字符串通过 innerHTML 插入到轮播图盒子\r\n    wrapper.innerHTML = carouselContainer + carouselIndicators;\r\n    // 通过定时器开启自动轮播,每过一段时间调用 getNext 方法\r\n    let timer = setInterval(getNext, carousel.times);\r\n    carousel.autoCycleTimer.add(timer);\r\n};\r\n\r\nfunction getPrev() {\r\n    // 获取到轮播图每一项的图片容器\r\n    const carouselItems = document.getElementsByClassName('carousel-item');\r\n    let length = carouselItems.length;\r\n    // 当后退到第一张时，重置为总长度，防止index变为负数导致bug\r\n    carousel.currentIndex == 0 && (carousel.currentIndex = length);\r\n    // 每调用一次 getPrev，序号-1\r\n    let index = carousel.currentIndex = --carousel.currentIndex % length;\r\n    // 将类数组转变为数组\r\n    let newArr = Array.from(carouselItems);\r\n    // 计算得到轮播图每一项的图片容器的宽度\r\n    let { width = 0 } = getElementRect(carouselItems[0]);\r\n    // 轮播图数组移动\r\n    newArr = [...newArr.slice(index), ...newArr.slice(0, index)];\r\n    newArr.forEach((item, i) => {// 轮播图数组第一项移动到最后一项，其他项顺序不变\r\n        if (i == 0) { \r\n            item.style.transform = `translateX(${width * (length - 1)}px)`;\r\n            item.style.opacity = 0;\r\n        }\r\n        item.style.transform = `translateX(${width * (i - 1)}px)`;\r\n       item.style.opacity = 1;\r\n    });\r\n    // 指示器移动\r\n    indicatorsRender(index);\r\n}\r\n\r\nfunction getNext() {\r\n    const carouselItems = document.getElementsByClassName('carousel-item');\r\n    let length = carouselItems.length;\r\n    let index = carousel.currentIndex = ++carousel.currentIndex % length;\r\n\r\n    let newArr = Array.from(carouselItems);\r\n    let lens = newArr.length;\r\n     let { width = 0 } = getElementRect(carouselItems[0]);\r\n    //当index为0时轮播图数组不做处理，>0时进行数组每一项移动\r\n    index != 0 && (newArr = [...newArr.slice(-index, lens), ...newArr.slice(0, lens - index)]);\r\n\r\n    newArr.forEach((item, i) => {\r\n        if (i == 0) {// 因为向右移动，轮播图数组最后一项移动到第一项，其他项顺序不变\r\n            item.style.transform = `translateX(${-width * (length - 1)}px)`;\r\n            item.style.opacity = 0;\r\n        }\r\n        item.style.transform = `translateX(${width * (i - 1)}px)`;\r\n        item.style.opacity = 1;\r\n    });\r\n\r\n    indicatorsRender(index)\r\n}\r\n\r\nfunction indicatorsRender(index) {\r\n    // 获取到轮播图每一项的指示器\r\n    const indicators = document.getElementsByClassName('carousel-indicators-li');\r\n    Array.from(indicators).forEach((item, i) => {\r\n        if (index == i) { // 当 index 和指示器下标相同添加active类\r\n            item.setAttribute('class', 'carousel-indicators-li active')\r\n        } else {\r\n            item.setAttribute('class', 'carousel-indicators-li')\r\n        }\r\n    })\r\n}\r\n\r\nfunction getElementRect(ele) {\r\n    try { //需要被执行的语句\r\n        return ele.getBoundingClientRect();\r\n    } catch (error) { //如果在try块里有异常被抛出时执行的语句\r\n        /* 页面退出 ele 为空，清除定时器，防止报错 */\r\n        clearAllTimer();\r\n        return {}\r\n    }\r\n}\r\n\r\nfunction leftHandle() {//左切换箭头事件处理\r\n    //清空定时器暂停轮播\r\n    clearAllTimer()\r\n    //切换到前一张\r\n    getPrev();\r\n    //开启定时器继续轮播，并将定时器加入到定时器保存器中\r\n    let timer = setInterval(getNext, carousel.times);\r\n    carousel.autoCycleTimer.add(timer)\r\n}\r\n\r\nfunction rightHandle() {//右切换箭头事件处理\r\n    clearAllTimer()\r\n    getNext();\r\n    let timer = setInterval(getNext, carousel.times);\r\n    carousel.autoCycleTimer.add(timer)\r\n}\r\n\r\n//函数防抖\r\nconst leftHandleDebounce = debounce(leftHandle, 500);\r\nconst rightHandleDebounce = debounce(rightHandle, 500);\r\n\r\nexport function initCarouselEvent() {\r\n    const leftControl = document.getElementsByClassName('carousel-control-left');\r\n    const rightControl = document.getElementsByClassName('carousel-control-right');\r\n    const carouselContainer = document.querySelector('.carousel-container');\r\n    const indicatorsWrapper = document.querySelector('.carousel-indicators');\r\n    // 左右箭头切换事件\r\n    leftControl[0].addEventListener('click', leftHandleDebounce);\r\n    rightControl[0].addEventListener('click', rightHandleDebounce);\r\n    \r\n    // 移入移出控制轮播播放事件 \r\n    carouselContainer.addEventListener('mouseenter', () => {\r\n        //移入轮播图通过移除定时器达到轮播图暂停的目的\r\n        clearAllTimer()\r\n    });\r\n    \r\n    carouselContainer.addEventListener('mouseleave', () => {\r\n        //移出轮播图通过设置定时器达到开启轮播图轮播的目的\r\n        let timer = setInterval(getNext, carousel.times);\r\n        carousel.autoCycleTimer.add(timer)\r\n    });\r\n\t//指示器事件处理函数：通过事件委托到父级容器 ul，减少对每个指示器添加事件监听\r\n    indicatorsWrapper.addEventListener('mouseenter', (e) => {\r\n        if (e.target.tagName === 'LI') {\r\n            clearAllTimer()\r\n            // 得到每个指示器的序号\r\n            const index = e.target.getAttribute('data-slide-to');\r\n            // 序号-1，调用getNext会+1，两者相抵消，根据序号指定到对应的图片\r\n            carousel.currentIndex = index - 1;\r\n            getNext();\r\n            let timer = setInterval(getNext, carousel.times);\r\n            carousel.autoCycleTimer.add(timer)\r\n        }\r\n    }, true)\r\n}\r\n\r\nfunction clearAllTimer() {\r\n    for (const i of carousel.autoCycleTimer) {\r\n        clearInterval(i);\r\n        if(carousel.autoCycleTimer>100){\r\n            carousel.autoCycleTimer.clear();\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import {getRecommendList} from \"../service/ajax.js\";\r\nimport { reactive } from \"../util/reactive.js\";\r\nimport { initPlayerControl,PlayerCoverBackMode,playerListRender } from \"../home/control.js\";\r\nimport { formatCreateTime, formatSongTime, songListFilter } from \"../util/util.js\";\r\n//获得歌单id\r\n// import { getRouterOptions } from \"./util.js\";\r\n\r\nconst recommendDetail = {\r\n    playlist: [],\r\n    detail: {},\r\n    listActive: 1813926556\r\n}\r\n\r\n// 移动鼠标高亮涉及到的变量\r\nconst activeProxy = reactive({\r\n    active: recommendDetail.listActive,//存放音乐的id\r\n}, initList);\r\n\r\n// 双击播放音乐涉及到的变量\r\nconst isPlayProxy = reactive({\r\n    active: recommendDetail.listActive,//存放音乐的id\r\n    isPlay: false,//歌曲是否在播放\r\n}, initList);\r\n\r\nexport const recommendListPage = async ({ params = '' }) => {\r\n    document.querySelector('#app').innerHTML = `加载中`;\r\n    const result = await getRecommendList(params)\r\n    if (result.code == 404) {\r\n        document.querySelector('#app').innerHTML = `未找到资源`;\r\n    } else {\r\n        recommendDetail.detail = result.playlist;\r\n        recommendDetail.playlist = result.playlist.tracks;\r\n        initDescribe();\r\n        initList();\r\n        initEvent();\r\n    }\r\n    const musicId = window.localStorage.getItem('musicId');\r\n    window.localStorage.setItem('lastRecommendId',params);\r\n    PlayerCoverBackMode('player', musicId);\r\n}\r\n\r\nfunction initDescribe() {\r\n    let tagsTemplate = '';\r\n    recommendDetail.detail.tags.forEach((tag, index) => {\r\n        index == recommendDetail.detail.tags.length - 1 ?\r\n            tagsTemplate += `<span class=\"tag\">${tag}  </span>` :\r\n            tagsTemplate += `<span class=\"tag\">${tag} / </span>`\r\n    });\r\n    let time = formatCreateTime(recommendDetail.detail.createTime)\r\n    document.querySelector('#app').innerHTML = `            \r\n<div class=\"w\">\r\n    <div class=\"recommend-header\">\r\n        <a href=\"#/home\">首页</a>/\r\n        <span>推荐歌单页</span>\r\n    </div>\r\n    <div class=\"recommend-wrapper\">\r\n    <!-- 此处为推荐页，内容主要包括两个部分：歌单介绍和歌单列表 -->\r\n        <div class=\"recommend-describe d-flex justify-content-start\">\r\n        <!-- 歌单介绍 -->\r\n            <div class=\"recommend-describe-left\">\r\n                <img src=\"${recommendDetail.detail.coverImgUrl}\" alt=\"\">\r\n            </div>\r\n            <div class=\"recommend-describe-right d-flex flex-column align-items-start\">\r\n                <h4 class=\"recommend-describe-right-title single-text-omitted\">\r\n                    ${recommendDetail.detail.name}\r\n                </h4>\r\n                <div class=\"recommend-describe-right-creator d-flex\">\r\n                    <img class=\"avatar\"\r\n                        src=\"${recommendDetail.detail.creator.avatarUrl}\"\r\n                        alt=\"\">\r\n                    <span class=\"creator\">${recommendDetail.detail.creator.detailDescription}</span>\r\n                    <span class=\"create-time\">${time}</span>\r\n                </div>\r\n                <div class=\"recommend-describe-right-add d-flex\">\r\n                    <span class=\"btn\">播放全部</span><span class=\"add\">+</span>\r\n                </div>\r\n                <div class=\"recommend-describe-right-info\">\r\n                    <div class=\"info\">\r\n                        <span class=\"label\">标签：</span>\r\n                        ${tagsTemplate}\r\n                    </div>\r\n                    <div class=\"info\">\r\n                        <span class=\"label\">歌曲：</span>\r\n                        <span class=\"label-info\">${recommendDetail.detail.trackCount}</span>\r\n                        <span class=\"label\">播放：</span>\r\n                        <span class=\"label-info\">${recommendDetail.detail.playCount}</span>\r\n                    </div>\r\n                    <div class=\"info single-text-omitted \">\r\n                        <span class=\"label\">简介：</span>\r\n                        <span class=\"label-info \">${recommendDetail.detail.description}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>  \r\n        <div class=\"recommend-list\">\r\n            <!-- 歌单列表  -->\r\n            <h4 class=\"recommend-list-title\">\r\n            歌曲列表\r\n            </h4>\r\n            <ul class=\"recommend-list-songlist-header d-flex justify-content-start\">\r\n                <li class=\"songlist-header-name\">歌曲</li>\r\n                <li class=\"songlist-header-author\">歌手</li>\r\n                <li class=\"songlist-header-album\">专辑</li>\r\n                <li class=\"songlist-header-time\">时长</li>\r\n            </ul>\r\n            <ul class=\"recommend-list-songlist-body\">\r\n            </ul>\r\n        </div> \r\n    </div> \r\n</div>\r\n`;\r\n}\r\n\r\nfunction initList() {\r\n    const listDom = document.getElementsByClassName('recommend-list-songlist-body')[0];\r\n    let listTemplate = ''; let isEvenOrOdd = '';\r\n    recommendDetail.playlist.forEach((item, index) => {\r\n        isEvenOrOdd = index % 2 == 0 ? 'even' : 'odd';\r\n        let isActive = activeProxy.active == item.id ? 'active' : '';\r\n        let isPlay;\r\n        if (item.id == isPlayProxy.active) {\r\n            isPlay = isPlayProxy.isPlay;\r\n        } else {\r\n            isPlay = false;\r\n        }\r\n        listTemplate += `\r\n        <li class=\"songlist-item pointer ${isEvenOrOdd} ${isActive} d-flex justify-content-start\" data-index=${item.id}>\r\n            <div class=\"songlist-number font-color\">\r\n                <span class=\"index\" style=${!isPlay ? 'display:inline-block' : 'display:none'}>${index + 1}</span>\r\n                <svg class=\"icon\" style=${isPlay ? 'display:inline-block' : 'display:none'} aria-hidden=\"true\">\r\n                    <use xlink:href=\"#icon-bofangzhong\"></use>\r\n                </svg>\r\n                <svg class=\"icon\" aria-hidden=\"true\">\r\n                    <use xlink:href=\"#icon-shoucang\"></use>\r\n                </svg>\r\n                <svg class=\"icon\" aria-hidden=\"true\">\r\n                    <use xlink:href=\"#icon-xiazai\"></use>\r\n                </svg>\r\n            </div>\r\n            <div class=\"songlist-songname\">\r\n                ${item.name}\r\n            </div>\r\n            <div class=\"songlist-artist font-color\">\r\n                ${item.ar[0].name}\r\n            </div>\r\n            <div class=\"songlist-album font-color\">\r\n                ${item.al.name}\r\n            </div>\r\n            <div class=\"songlist-time font-color\">\r\n            ${formatSongTime(item.dt)}\r\n            </div>\r\n        </li>\r\n        `;\r\n    })\r\n    listDom.innerHTML = listTemplate;\r\n}\r\n\r\nfunction initEvent() {\r\n    const songListWrap = document.querySelector('.recommend-list-songlist-body');\r\n    songListWrap.addEventListener('mouseenter', (e) => {\r\n        const targetName = e.target.nodeName.toLocaleLowerCase();\r\n        if (targetName == 'li') {\r\n            const id = e.target.getAttribute('data-index');\r\n            //提升性能，防止多次触发\r\n            if (activeProxy.active == id) return;\r\n            activeProxy.active = id;\r\n        }\r\n    }, true);\r\n    songListWrap.addEventListener('dblclick', async (e) => {\r\n        //修改列表的播放图标\r\n        const targetName = e.target.nodeName.toLocaleLowerCase();\r\n        if (targetName == 'li') {\r\n            const id = e.target.getAttribute('data-index');\r\n            isPlayProxy.active = id;\r\n            window.localStorage.setItem('musicId', id);\r\n        } else if (targetName == 'div') {\r\n            const id = e.target.parentNode.getAttribute('data-index');\r\n            isPlayProxy.active = id;\r\n            window.localStorage.setItem('musicId', id);\r\n        }\r\n        isPlayProxy.isPlay = true;\r\n        initPlayerControl();\r\n    }, true);\r\n    /* 点击将歌曲列表添加到播放列表中 */\r\n    const addSongList = document.querySelector('.recommend-describe-right-add');\r\n    addSongList.addEventListener('click', () => {\r\n        const arr = songListFilter(recommendDetail.playlist)\r\n        window.localStorage.setItem('songList', JSON.stringify(arr))\r\n        playerListRender();\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n","// window.addEventListener('load', () => {\r\n//     console.log('load')\r\n//     const script = document.createElement('SCRIPT');\r\n//     script.src = './js/home/home.js';\r\n//     script.setAttribute('type','module');\r\n//     document.querySelector('body').appendChild(script);\r\n// })\r\nimport { reactive } from \"./util/reactive.js\";\r\nimport { getRouterOptions } from \"./util/util.js\";\r\nimport { initPlayerControl, initPlayerEvent } from \"./home/control.js\";\r\n\r\n//数据响应式执行函数\r\nlet effective = () => changeComponent();\r\n// 数据响应式处理\r\nexport const hashProxy = reactive({\r\n    hash: \"\"\r\n}, effective)\r\n\r\nimport { homePage } from './home/home.js';\r\nimport { recommendListPage } from './recommendList/recommendList.js';\r\nimport { playerPage } from './player/player.js';\r\n//路由表\r\nconst routers = [\r\n    {\r\n        name: 'home',\r\n        path: '/home',\r\n        component: homePage\r\n    },\r\n    {\r\n        name: 'recommendList',\r\n        path: '/recommendList',\r\n        component: recommendListPage\r\n    },\r\n    {\r\n        name: 'player',\r\n        path: '/player',\r\n        component: playerPage\r\n    },\r\n];\r\n// let hash;\r\n\r\nfunction changeComponent() {\r\n    let options = getRouterOptions(hashProxy.hash);\r\n    const [{ component, name }] = routers.filter(router => router.name == options.name);\r\n    component(options);\r\n    document.querySelector('#header-title').innerHTML = name;\r\n}\r\n\r\n// 监听页面 load 和 hashchange 事件，事件触发后对代理对象赋值\r\nwindow.addEventListener('load', () => {\r\n    hashProxy.hash = window.location.hash;\r\n    // changeComponent()\r\n    initControl()\r\n})\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n    hashProxy.hash = window.location.hash;\r\n    // changeComponent()\r\n})\r\n\r\nfunction initControl() {\r\n    //初始化的时候加载歌曲\r\n    initPlayerControl();\r\n    //绑定底部控制栏的事件\r\n    initPlayerEvent();\r\n}","`document.querySelector('#app').innerHTML = '111';`\r\n\r\n// home.js\r\nconst homePageTemplate = `\r\n<div class=\"w\">\r\n    <div class=\"carousel-wrapper\">\r\n        <div class=\"carousel-container \">\r\n            <!-- 切换箭头 -->\r\n            <!-- 轮播图图片需要动态生成 -->\r\n        </div>\r\n        <!-- 指示器 -->\r\n        <ul class=\"carousel-indicators d-flex\">\r\n\r\n        </ul>\r\n    </div>\r\n    <div class=\"recommend-playlist\">\r\n        <h3 class=\"recommend-playlist-header\">推荐歌单<svg class=\"icon\" aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-arrow-right\"></use>\r\n            </svg>\r\n        </h3>\r\n        <ul class=\"recommend-playlist-container d-flex justify-content-between align-items-start\">\r\n            <!-- 推荐歌单需要动态生成 -->\r\n        </ul>\r\n    </div>\r\n</div>\r\n`;\r\n\r\nimport { getBannerList } from '../service/ajax.js';\r\nimport { carouselRender, initCarouselEvent } from \"./carousel.js\";\r\n\r\nfunction recommendRender(data) {\r\n    //获得推荐歌单盒子\r\n    const recommendWrapper = document.querySelector('.recommend-playlist-container');\r\n    let template = '';\r\n    let length = data.length;\r\n    data.forEach((item, index) => {\r\n        // 此处相较于实验2 home.html 中有添加一个 a 标签包裹图片和文字，目的是用来完成页面跳转，达到单页面应用的目的\r\n        template += `\r\n            <li data-index=${index} class=\"recommend-playlist-item d-flex flex-column }\" style=\"width:${98 / length}%\">\r\n                <div class=\"recommend-playlist-cover\">\r\n                    <a href='#/recommendList/:${item.creativeId}'>\r\n                        <img src=\"${item.uiElement.image.imageUrl}\"\r\n                            alt=\"\">\r\n                        <svg class=\"recommend-playlist-icon icon\" aria-hidden=\"true\">\r\n                            <use xlink:href=\"#icon-zanting\"></use>\r\n                        </svg>\r\n                    </a>\r\n                </div>\r\n                <div class=\"recommend-playlist-title multi-text-omitted\">\r\n                    ${item.uiElement.mainTitle.title}\r\n                </div>\r\n            </li>\r\n            `\r\n    });\r\n    recommendWrapper.innerHTML = template;\r\n}\r\n\r\nfunction initRecommendEvent() { //动态增加 hover 类\r\n    const recommendWrapper = document.querySelector('.recommend-playlist-container');\r\n    recommendWrapper.addEventListener('mouseenter', (e) => {\r\n        if (e.target.tagName === \"LI\") {\r\n            e.target.setAttribute('class', 'recommend-playlist-item d-flex flex-column hover')\r\n        }\r\n    }, true)\r\n    recommendWrapper.addEventListener('mouseleave', (e) => {\r\n        if (e.target.tagName === \"LI\") {\r\n            e.target.setAttribute('class', 'recommend-playlist-item d-flex flex-column ')\r\n        }\r\n    }, true)\r\n}\r\n\r\nexport async function homePage(){\r\n    //首页初始化\r\n    document.querySelector('#app').innerHTML = homePageTemplate;\r\n    const result = await getBannerList();\r\n    console.log(\"🚀 ~ file: home.js ~ line 76 ~ homePage ~ result\", result)\r\n    const carouselData = result.data.blocks[0].extInfo.banners;\r\n    //首次渲染轮播图\r\n    carouselRender(carouselData);\r\n    //轮播图事件绑定\r\n    initCarouselEvent();\r\n\r\n    const recommendData = [...result.data.blocks[1].creatives];\r\n    // 初始化歌单推荐列表\r\n    recommendRender(recommendData);\r\n    // 初始化页面事件\r\n    initRecommendEvent()\r\n}"],"names":["reactive","obj","effective","Proxy","get","key","Reflect","set","value","debounce","fn","times","isImmediately","cb","timer","args","clearTimeout","isDone","setTimeout","apply","this","content","formatSongTime","time","second","Math","floor","minute","Ajax","method","url","data","Promise","resolve","xhr","XMLHttpRequest","open","onload","JSON","parse","response","onerror","console","log","status","send","stringify","async","getAudioInfo","musicId","result","music","lyric","musicDataProxy","songInfo","songs","document","querySelector","innerHTML","al","picUrl","name","ar","lyricData","length","tempStr","forEach","item","Object","keys","initLyric","audio","addEventListener","e","lyricItem","querySelectorAll","currentTime","target","i","Array","from","getAttribute","classList","remove","add","className","index","ele","height","getBoundingClientRect","scrollTop","setScrollTop","ablumCover","style","animationPlayState","initPlayerEvent","src","canvas","createElement","width","ctx","getContext","img","Image","setAttribute","drawImage","gaussData","imgData","x","y","r","g","b","a","j","k","len","pixes","gaussMatrix","gaussSum","radius","sqrt","PI","exp","gaussBlur","getImageData","putImageData","imgSrc","toDataURL","backgroundImage","changePlayerMusicId","id","musicData","musicLyric","getAudioLyric","lyricStr","split","map","v","lyricObj","test","RegExp","$1","reduce","accumulator","curValue","Number","toFixed","$2","formatSongLyric","lrc","isPlayProxy","isPlay","myAudio","playerControl","play","pause","musicIdProxy","initPlayerControl","musicModeProxy","musicMode","musicModeRender","reloadAudio","window","localStorage","getItem","PlayerCoverBackMode","musicSrc","getAudioSrc","innerText","dt","playerControlRender","playerListRender","mode","musicModeStr","changeMusicId","control","songList","findIndex","random","setItem","setProcess","eleName","eleWidth","progressBar","left","percent","round","page","playerListUl","playerListArr","join","carousel","currentIndex","animationTimes","autoCycleTimer","Set","getNext","carouselItems","getElementsByClassName","newArr","lens","getElementRect","slice","transform","opacity","indicatorsRender","indicators","error","clearAllTimer","leftHandleDebounce","getPrev","setInterval","rightHandleDebounce","clearInterval","clear","recommendDetail","playlist","detail","listActive","activeProxy","active","initList","listDom","listTemplate","isEvenOrOdd","isActive","hashProxy","hash","options","params","query","routerArr","paramsArr","getRouterOptions","component","routers","filter","router","changeComponent","path","getBannerList","carouselItem","carouselIndicatorsLi","wrapper","pic","carouselContainer","carouselIndicators","carouselRender","blocks","extInfo","banners","leftControl","rightControl","indicatorsWrapper","tagName","initCarouselEvent","recommendWrapper","template","creativeId","uiElement","image","imageUrl","mainTitle","title","recommendRender","creatives","initRecommendEvent","getRecommendList","code","tracks","tagsTemplate","tags","tag","now","Date","getFullYear","getMonth","getDay","formatCreateTime","createTime","coverImgUrl","creator","avatarUrl","detailDescription","trackCount","playCount","description","initDescribe","songListWrap","nodeName","toLocaleLowerCase","targetName","parentNode","arr","songListArr","tempMap","Map","has","limitArr","values","songListFilter","initEvent","location","volume","duration","clientX","totalTime","isPlayerListShow","listsEle"],"sourceRoot":""}